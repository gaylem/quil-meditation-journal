"use strict";(self.webpackChunkquil=self.webpackChunkquil||[]).push([[809],{75:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ pages_Account)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(709);\n// EXTERNAL MODULE: ./client/hooks/useAuthContext.js\nvar useAuthContext = __webpack_require__(952);\n// EXTERNAL MODULE: ./client/axiosConfig.js\nvar axiosConfig = __webpack_require__(853);\n// EXTERNAL MODULE: ./node_modules/js-cookie/dist/js.cookie.mjs\nvar js_cookie = __webpack_require__(955);\n;// CONCATENATED MODULE: ./server/db/accountPageData.js\n//** ACCOUNT PAGE DATA */\n\n\nvar items = [{\n  id: \'1\',\n  title: \'Download your journal entries\',\n  content: \'Enter your password and click "Download Journal Entries" to download a .csv file containing all your journal entries.\',\n  formFields: [{\n    label: \'Password:\',\n    "for": \'downloadPassword\',\n    id: \'downloadPassword\',\n    name: \'enterPassword\',\n    type: \'password\',\n    placeholder: \'Enter your password\'\n  }],\n  buttonText: \'Download journal entries\',\n  endpoint: \'download\',\n  success: \'Journal entries downloaded successfully.\',\n  error: \'Download failed. Please try again.\'\n}, {\n  id: \'2\',\n  title: \'Update your username\',\n  content: \'Enter your new username and current password below to update your username. Make sure to remember your new username. If you use a password manager, update it immediately.\',\n  formFields: [{\n    label: \'New Username\',\n    "for": \'username\',\n    id: \'username\',\n    name: \'newUsername\',\n    placeholder: \'ex: jane\'\n  }, {\n    label: \'Password:\',\n    "for": \'usernamePassword\',\n    id: \'usernamePassword\',\n    name: \'enterPassword\',\n    type: \'password\',\n    placeholder: \'Enter your password\'\n  }],\n  buttonText: \'Update Username\',\n  endpoint: \'username\',\n  success: \'Username updated successfully.\',\n  error: \'Username update failed. The username you have entered may already exist. Please try again.\'\n}, {\n  id: \'3\',\n  title: \'Update your email\',\n  content: \'Enter your new email address and current password below to update your email address.\',\n  formFields: [{\n    label: \'New Email\',\n    "for": \'newEmail\',\n    id: \'newEmail\',\n    name: \'newEmail\',\n    type: \'email\',\n    placeholder: \'ex: janedoe@example.com\'\n  }, {\n    label: \'Password:\',\n    "for": \'emailPassword\',\n    id: \'emailPassword\',\n    name: \'enterPassword\',\n    type: \'password\',\n    placeholder: \'Enter your password\'\n  }],\n  buttonText: \'Update Email\',\n  endpoint: \'email\',\n  success: \'Email successfully updated.\',\n  error: \'Email update failed. The email you have entered may already exist. Please try again.\'\n}, {\n  id: \'4\',\n  title: \'Update your password\',\n  content: /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("p", null, "Enter your current password and new password below to update your password."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("p", null, "Your new password must be ", /*#__PURE__*/react.createElement("strong", null, "at least 8 characters long"), " and contain the following:"), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("ul", null, /*#__PURE__*/react.createElement("li", null, "1 uppercase letter"), /*#__PURE__*/react.createElement("li", null, "1 lowercase letter"), /*#__PURE__*/react.createElement("li", null, "1 number"), /*#__PURE__*/react.createElement("li", null, "1 symbol"), /*#__PURE__*/react.createElement("br", null)), /*#__PURE__*/react.createElement("p", null, "However, more of each is better from a security standpoint."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("p", null, "Once you enter your new password, you will be logged out and prompted to log back in again."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("p", null, "Be sure to remember your new password. We recommend using a password manager such as ", /*#__PURE__*/react.createElement("a", {\n    href: "https://passwords.google.com/"\n  }, "Google Password Manager"), ", ", /*#__PURE__*/react.createElement("a", {\n    href: "https://support.apple.com/en-us/HT204085"\n  }, "iCloud Keychain"), " or ", /*#__PURE__*/react.createElement("a", {\n    href: "https://nordpass.com/"\n  }, "Nordpass"), ". These tools often provide a password generator, which makes strong password creation quick and easy."), /*#__PURE__*/react.createElement("br", null)),\n  formFields: [{\n    label: \'Current Password:\',\n    "for": \'currentPassword\',\n    id: \'currentPassword\',\n    name: \'currentPassword\',\n    type: \'password\',\n    placeholder: \'Enter your current password\'\n  }, {\n    label: \'New Password:\',\n    "for": \'newPassword\',\n    id: \'newPassword\',\n    name: \'newPassword\',\n    type: \'password\',\n    placeholder: \'Enter your new password\'\n  }, {\n    label: \'Confirm New Password:\',\n    "for": \'confirmNewPassword\',\n    id: \'confirmNewPassword\',\n    name: \'confirmNewPassword\',\n    type: \'password\',\n    placeholder: \'Confirm your new password\'\n  }],\n  buttonText: \'Update Password\',\n  endpoint: \'pswd\',\n  success: \'Password updated successfully.\',\n  error: \'Password update failed. Please try again.\'\n}, {\n  id: \'5\',\n  title: \'Delete your account\',\n  content: /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("p", null, "Deleting your account will ", /*#__PURE__*/react.createElement("strong", null, "permanently erase all of your data from our database."), " This action cannot be reversed. If you truly want to delete your account, we recomend that you ", /*#__PURE__*/react.createElement("strong", null, "download your journal entries first.")), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("p", null, "If you have downloaded your entries and are still sure you want to delete your account, enter your password below and click \\"Delete Account.\\" We will redirect you to the signup page, and ", /*#__PURE__*/react.createElement("strong", null, "your account will no longer exist.")), /*#__PURE__*/react.createElement("br", null)),\n  formFields: [{\n    label: \'Password:\',\n    "for": \'deleteAccountPassword\',\n    id: \'deleteAccountPassword\',\n    name: \'enterPassword\',\n    type: \'password\',\n    placeholder: \'Enter your password\'\n  }],\n  buttonText: \'Delete Account\',\n  endpoint: \'delete\',\n  success: \'User account deleted successfully.\',\n  error: \'Account deletion failed. Please try again.\'\n}];\n/* harmony default export */ const accountPageData = (items);\n;// CONCATENATED MODULE: ./client/pages/Account.jsx\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n//** ACCOUNT PAGE */\n\n\n\n\n// Import other libraries\n\n\n\n// Import data\n\nvar Account = function Account() {\n  var _useAuthContext = (0,useAuthContext/* useAuthContext */.E)(),\n    user = _useAuthContext.user,\n    dispatch = _useAuthContext.dispatch;\n  var initialItemStates = Array(2).fill(false);\n  var _useState = (0,react.useState)(initialItemStates),\n    _useState2 = _slicedToArray(_useState, 2),\n    itemStates = _useState2[0],\n    setItemStates = _useState2[1];\n  var _useState3 = (0,react.useState)({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = (0,react.useState)({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    success = _useState6[0],\n    setSuccess = _useState6[1];\n  var toggle = function toggle(index) {\n    var newItemStates = _toConsumableArray(itemStates);\n    newItemStates[index] = !newItemStates[index];\n    setItemStates(newItemStates);\n  };\n  var handleFormSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(index, formData, endpoint) {\n      var response, blob, url, a, updatedUsername, newUserState, _response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            // Declare response variable and initialize setError and setSuccess\n\n            setError({});\n            setSuccess({});\n            // Download journal entries\n            if (!(endpoint === \'download\')) {\n              _context.next = 17;\n              break;\n            }\n            _context.prev = 4;\n            _context.next = 7;\n            return axiosConfig/* default */.Z.post("/api/accounts/download/".concat(user.userId), {\n              enterPassword: formData.enterPassword\n            }, {\n              responseType: \'blob\',\n              headers: {\n                \'Content-Type\': \'application/json\'\n              }\n            }, {\n              withCredentials: true\n            });\n          case 7:\n            response = _context.sent;\n            // If download === success\n            if (response.status === 200) {\n              // Download journal entries to browser\n              blob = new Blob([response.data], {\n                type: \'application/octet-stream\'\n              });\n              url = window.URL.createObjectURL(blob);\n              a = document.createElement(\'a\');\n              a.href = url;\n              a.download = \'my_entries.csv\';\n              document.body.appendChild(a);\n              a.click();\n              document.body.removeChild(a);\n              window.URL.revokeObjectURL(url);\n              // Display success message on client\n              setSuccess(function (success) {\n                return _objectSpread(_objectSpread({}, success), {}, _defineProperty({}, index, accountPageData[index].success));\n              });\n            }\n            _context.next = 15;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context["catch"](4);\n            console.error(\'Caught error:\', _context.t0);\n            setError(function (error) {\n              return _objectSpread(_objectSpread({}, error), {}, _defineProperty({}, index, accountPageData[index].error));\n            });\n          case 15:\n            _context.next = 75;\n            break;\n          case 17:\n            if (!(endpoint === \'username\')) {\n              _context.next = 31;\n              break;\n            }\n            _context.prev = 18;\n            _context.next = 21;\n            return axiosConfig/* default */.Z.patch("/api/accounts/username/".concat(user.userId), {\n              newUsername: formData.newUsername,\n              password: formData.enterPassword\n            }, {\n              withCredentials: true\n            });\n          case 21:\n            response = _context.sent;\n            // If username update === success\n            if (response.status === 200) {\n              // Extract the updated user data from the response\n              updatedUsername = response.data;\n              newUserState = {\n                username: updatedUsername,\n                accessToken: user.accessToken,\n                userId: user.userId\n              }; // Dispatch the \'LOGIN\' action with the updated user data\n              js_cookie/* default */.Z.set(\'user\', JSON.stringify(newUserState));\n              dispatch({\n                type: \'LOGIN\',\n                payload: newUserState\n              });\n              setSuccess(function (success) {\n                return _objectSpread(_objectSpread({}, success), {}, _defineProperty({}, index, accountPageData[index].success));\n              });\n            }\n            _context.next = 29;\n            break;\n          case 25:\n            _context.prev = 25;\n            _context.t1 = _context["catch"](18);\n            console.error(\'Caught error:\', _context.t1);\n            setError(function (error) {\n              return _objectSpread(_objectSpread({}, error), {}, _defineProperty({}, index, accountPageData[index].error));\n            });\n          case 29:\n            _context.next = 75;\n            break;\n          case 31:\n            if (!(endpoint === \'email\')) {\n              _context.next = 45;\n              break;\n            }\n            _context.prev = 32;\n            _context.next = 35;\n            return axiosConfig/* default */.Z.patch("/api/accounts/email/".concat(user.userId), {\n              newEmail: formData.newEmail,\n              password: formData.enterPassword\n            }, {\n              withCredentials: true\n            });\n          case 35:\n            response = _context.sent;\n            // if update email === success\n            if (response.status === 200) {\n              // set success message\n              setSuccess(function (success) {\n                return _objectSpread(_objectSpread({}, success), {}, _defineProperty({}, index, accountPageData[index].success));\n              });\n              // if update email === fail\n            }\n            _context.next = 43;\n            break;\n          case 39:\n            _context.prev = 39;\n            _context.t2 = _context["catch"](32);\n            console.error(\'Caught error:\', _context.t2);\n            setError(function (error) {\n              return _objectSpread(_objectSpread({}, error), {}, _defineProperty({}, index, accountPageData[index].error));\n            });\n          case 43:\n            _context.next = 75;\n            break;\n          case 45:\n            if (!(endpoint === \'pswd\')) {\n              _context.next = 59;\n              break;\n            }\n            _context.prev = 46;\n            _context.next = 49;\n            return axiosConfig/* default */.Z.patch("/api/accounts/pswd/".concat(user.userId), {\n              currentPassword: formData.currentPassword,\n              newPassword: formData.newPassword,\n              confirmNewPassword: formData.confirmNewPassword\n            }, {\n              withCredentials: true\n            });\n          case 49:\n            response = _context.sent;\n            if (response.status === 204) {\n              setSuccess(function (success) {\n                return _objectSpread(_objectSpread({}, success), {}, _defineProperty({}, index, accountPageData[index].success));\n              });\n              // Clear token from cookies\n              js_cookie/* default */.Z.remove(\'user\');\n              // Redirect to the login page\n              window.location.href = \'/login\';\n            }\n            _context.next = 57;\n            break;\n          case 53:\n            _context.prev = 53;\n            _context.t3 = _context["catch"](46);\n            console.error(\'Caught error:\', _context.t3);\n            setError(function (error) {\n              return _objectSpread(_objectSpread({}, error), {}, _defineProperty({}, index, accountPageData[index].error));\n            });\n          case 57:\n            _context.next = 75;\n            break;\n          case 59:\n            if (!(endpoint === \'delete\')) {\n              _context.next = 73;\n              break;\n            }\n            _context.prev = 60;\n            _context.next = 63;\n            return axiosConfig/* default */.Z["delete"]("/api/accounts/delete/".concat(user.userId), {\n              data: {\n                password: formData.enterPassword\n              }\n            }, {\n              withCredentials: true\n            });\n          case 63:\n            _response = _context.sent;\n            if (_response.status === 200) {\n              setSuccess(function (success) {\n                return _objectSpread(_objectSpread({}, success), {}, _defineProperty({}, index, accountPageData[index].success));\n              });\n              // Clear token from cookies\n              js_cookie/* default */.Z.remove(\'user\');\n              // Redirect to the signup page\n              window.location.href = \'/signup\';\n            }\n            _context.next = 71;\n            break;\n          case 67:\n            _context.prev = 67;\n            _context.t4 = _context["catch"](60);\n            console.error(\'Caught error:\', _context.t4);\n            setError(function (error) {\n              return _objectSpread(_objectSpread({}, error), {}, _defineProperty({}, index, accountPageData[index].error));\n            });\n          case 71:\n            _context.next = 75;\n            break;\n          case 73:\n            if (response) {\n              _context.next = 75;\n              break;\n            }\n            throw new Error(\'Response is undefined or null\');\n          case 75:\n            _context.next = 81;\n            break;\n          case 77:\n            _context.prev = 77;\n            _context.t5 = _context["catch"](0);\n            console.error(\'Caught error:\', _context.t5);\n            setError(function (error) {\n              return _objectSpread(_objectSpread({}, error), {}, _defineProperty({}, index, accountPageData[index].error));\n            });\n          case 81:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 77], [4, 11], [18, 25], [32, 39], [46, 53], [60, 67]]);\n    }));\n    return function handleFormSubmit(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/react.createElement("div", {\n    className: "page-container"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "page-text"\n  }, /*#__PURE__*/react.createElement("h2", null, "Account Settings"), "You can manage your account settings below. If you have any questions, check out our ", /*#__PURE__*/react.createElement("a", {\n    href: "/help-faqs"\n  }, "Help & FAQs page.")), /*#__PURE__*/react.createElement("div", {\n    className: "feed-container"\n  }, accountPageData.map(function (item, index) {\n    return /*#__PURE__*/react.createElement("div", {\n      className: "toggle-entry",\n      key: item.id\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "toggle-header"\n    }, /*#__PURE__*/react.createElement("button", {\n      className: "toggle-btn",\n      onClick: function onClick() {\n        return toggle(index);\n      }\n    }, "+"), /*#__PURE__*/react.createElement("h3", {\n      className: "toggle-title"\n    }, item.title)), itemStates[index] && /*#__PURE__*/react.createElement("div", {\n      className: "toggle-container"\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "toggle-text"\n    }, item.content), /*#__PURE__*/react.createElement("div", {\n      className: "account-form-container"\n    }, /*#__PURE__*/react.createElement("form", {\n      onSubmit: function onSubmit(e) {\n        e.preventDefault();\n        var formData = {};\n        item.formFields.forEach(function (field) {\n          formData[field.name] = e.target[field.name + index].value;\n        });\n        handleFormSubmit(index, formData, item.endpoint);\n      },\n      className: "form"\n    }, item.formFields.map(function (field, fieldIndex) {\n      return /*#__PURE__*/react.createElement("div", {\n        className: "input-box",\n        key: field.id\n      }, /*#__PURE__*/react.createElement("label", {\n        htmlFor: field.id\n      }, field.label), /*#__PURE__*/react.createElement("input", {\n        key: fieldIndex,\n        id: field.id,\n        type: field.type || \'text\',\n        name: "".concat(field.name).concat(index),\n        placeholder: field.placeholder,\n        className: "formField"\n      }));\n    }), /*#__PURE__*/react.createElement("button", {\n      type: "submit",\n      className: "form-btn"\n    }, "".concat(item.buttonText)), error[index] && /*#__PURE__*/react.createElement("div", {\n      className: "error-message"\n    }, error[index]), success[index] && /*#__PURE__*/react.createElement("div", {\n      className: "success-message"\n    }, success[index])))));\n  })));\n};\n/* harmony default export */ const pages_Account = (Account);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///75\n')}}]);