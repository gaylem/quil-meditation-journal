"use strict";(self.webpackChunkquil=self.webpackChunkquil||[]).push([[19],{161:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ components_Header)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(709);\n// EXTERNAL MODULE: ./node_modules/react-router/dist/index.js\nvar dist = __webpack_require__(564);\n// EXTERNAL MODULE: ./client/hooks/useAuthContext.js\nvar useAuthContext = __webpack_require__(952);\n// EXTERNAL MODULE: ./client/hooks/useEntriesContext.js\nvar useEntriesContext = __webpack_require__(416);\n// EXTERNAL MODULE: ./node_modules/js-cookie/dist/js.cookie.mjs\nvar js_cookie = __webpack_require__(955);\n;// CONCATENATED MODULE: ./client/hooks/useLogout.js\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n//** USE LOGOUT HOOK */\n\n\n\n\n\n/**\n * Custom hook for handling user logout functionality.\n *\n * @returns {Object} An object containing the logout function.\n * @property {Function} logout - Function to perform user logout.\n */\nvar useLogout = function useLogout() {\n  // Get the dispatch functions from the authentication and entries contexts\n  var _useAuthContext = (0,useAuthContext/* useAuthContext */.E)(),\n    dispatch = _useAuthContext.dispatch,\n    user = _useAuthContext.user;\n  var _useEntriesContext = (0,useEntriesContext/* useEntriesContext */.O)(),\n    dispatchEntries = _useEntriesContext.dispatch;\n\n  /**\n   * Function to perform user logout.\n   *\n   * @param {string} refreshToken - User\'s refresh token for server-side logout.\n   */\n\n  var logout = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(userId) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch("/api/users/logout/".concat(userId), {\n              method: \'POST\',\n              headers: {\n                \'Content-Type\': \'application/json\'\n              },\n              body: JSON.stringify({\n                user: user\n              })\n            }, {\n              withCredentials: true\n            });\n          case 3:\n            response = _context.sent;\n            // Check if the server responds with a successful logout status (204)\n            if (response.status === 204) {\n              // Clear token from cookies\n              js_cookie/* default */.Z.remove(\'user\');\n\n              // Dispatch logout action to both authentication and entries contexts\n              dispatch({\n                type: \'LOGOUT\'\n              });\n              dispatchEntries({\n                type: \'SET_ENTRIES\',\n                payload: null\n              });\n            } else {\n              // Log an error if logout fails\n              console.error(\'Logout failed\');\n            }\n            _context.next = 10;\n            break;\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context["catch"](0);\n            // Log an error if an exception occurs during the logout process\n            console.error(\'Logout error:\', _context.t0);\n          case 10:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return function logout(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  // Return an object with the logout function\n  return {\n    logout: logout\n  };\n};\n// EXTERNAL MODULE: ./node_modules/react-router-dom/dist/index.js\nvar react_router_dom_dist = __webpack_require__(781);\n;// CONCATENATED MODULE: ./public/assets/images/close-button.png\n/* harmony default export */ const close_button = (__webpack_require__.p + "assets/images/close-button.68629004748a5b8335ae08533c847649.png");\n;// CONCATENATED MODULE: ./public/assets/images/gear.png\n/* harmony default export */ const gear = (__webpack_require__.p + "assets/images/gear.1cc2b312d172199b7c2e03c119a0fbb8.png");\n;// CONCATENATED MODULE: ./public/assets/images/brain.png\n/* harmony default export */ const brain = (__webpack_require__.p + "assets/images/brain.af3d2f36b1b5fc93d31efb9a82a908a1.png");\n;// CONCATENATED MODULE: ./public/assets/images/question.png\n/* harmony default export */ const question = (__webpack_require__.p + "assets/images/question.1dc1ae146782269155c3054a2c83dd50.png");\n;// CONCATENATED MODULE: ./public/assets/images/feather.png\n/* harmony default export */ const feather = (__webpack_require__.p + "assets/images/feather.bc89f4808de35a076d26e4a03ebacb28.png");\n;// CONCATENATED MODULE: ./public/assets/images/smiley.png\n/* harmony default export */ const smiley = (__webpack_require__.p + "assets/images/smiley.0f9c343674e49e9f268def73b995055c.png");\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(526);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n;// CONCATENATED MODULE: ./client/components/Sidebar.jsx\n//** SIDEBAR COMPONENT */\n\n\n\n\n// Import icons\n\n\n\n\n\n\n\n// Import props validation\n\n\n/**\n * Sidebar component for internal navigation links.\n *\n * @param {Object} props - Component properties.\n * @param {boolean} props.isOpen - Indicates whether the sidebar is open.\n * @param {function} props.toggleSidebar - Function to toggle the sidebar open/closed.\n * @returns {JSX.Element} Sidebar component.\n */\nvar Sidebar = function Sidebar(_ref) {\n  var isOpen = _ref.isOpen,\n    toggleSidebar = _ref.toggleSidebar;\n  // Determine the appropriate CSS class based on the sidebar state\n  var sidebarClass = isOpen ? \'sidebar open\' : \'sidebar\';\n  return /*#__PURE__*/react.createElement("div", {\n    className: sidebarClass\n  }, /*#__PURE__*/react.createElement("img", {\n    src: close_button,\n    onClick: toggleSidebar,\n    className: "closeBtn",\n    alt: "Button that closes sidebar navigation panel"\n  }), /*#__PURE__*/react.createElement("div", {\n    className: "sidebar-content"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "link"\n  }, /*#__PURE__*/react.createElement("img", {\n    src: feather,\n    className: "icon",\n    id: "gear",\n    alt: "feather icon"\n  }), /*#__PURE__*/react.createElement(react_router_dom_dist.Link, {\n    to: "/about-quil",\n    onClick: toggleSidebar\n  }, "About quil")), /*#__PURE__*/react.createElement("div", {\n    className: "link"\n  }, /*#__PURE__*/react.createElement("img", {\n    src: brain,\n    className: "icon",\n    id: "gear",\n    alt: "brain icon"\n  }), /*#__PURE__*/react.createElement(react_router_dom_dist.Link, {\n    to: "/how-to-meditate",\n    onClick: toggleSidebar\n  }, "How to Meditate")), /*#__PURE__*/react.createElement("div", {\n    className: "link"\n  }, /*#__PURE__*/react.createElement("img", {\n    src: question,\n    className: "icon",\n    id: "gear",\n    alt: "queation mark icon"\n  }), /*#__PURE__*/react.createElement(react_router_dom_dist.Link, {\n    to: "/help-faqs",\n    onClick: toggleSidebar\n  }, "Help & FAQs")), /*#__PURE__*/react.createElement("div", {\n    className: "link"\n  }, /*#__PURE__*/react.createElement("img", {\n    src: smiley,\n    className: "icon",\n    id: "gear",\n    alt: "smiley face icon"\n  }), /*#__PURE__*/react.createElement(react_router_dom_dist.Link, {\n    to: "/community",\n    onClick: toggleSidebar\n  }, "Community")), /*#__PURE__*/react.createElement("div", {\n    className: "link"\n  }, /*#__PURE__*/react.createElement("img", {\n    src: gear,\n    className: "icon",\n    id: "gear",\n    alt: "gear icon"\n  }), /*#__PURE__*/react.createElement(react_router_dom_dist.Link, {\n    to: "/account",\n    onClick: toggleSidebar\n  }, "Account"))));\n};\nSidebar.propTypes = {\n  isOpen: (prop_types_default()).bool.isRequired,\n  toggleSidebar: (prop_types_default()).func.isRequired\n};\n/* harmony default export */ const components_Sidebar = (Sidebar);\n;// CONCATENATED MODULE: ./public/assets/images/hamburger.png\n/* harmony default export */ const hamburger = (__webpack_require__.p + "assets/images/hamburger.e88ad38b997c27d6e020b7f14cb360ed.png");\n;// CONCATENATED MODULE: ./public/assets/images/feather-header.png\n/* harmony default export */ const feather_header = (__webpack_require__.p + "assets/images/feather-header.6c70c46da98817606c9f760e43d0cf51.png");\n;// CONCATENATED MODULE: ./client/components/Header.jsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n//** HEADER COMPONENT */\n\n\n\n// Import hooks and sidebar\n\n\n\n\n\n// Import icons\n\n\n\n/**\n * Header component containing the application title, logout button, and sidebar menu button.\n *\n * @returns {JSX.Element} The rendered header component.\n */\nfunction Header() {\n  var _useLogout = useLogout(),\n    logout = _useLogout.logout;\n  var _useAuthContext = (0,useAuthContext/* useAuthContext */.E)(),\n    user = _useAuthContext.user;\n  var navigate = (0,dist/* useNavigate */.s0)();\n\n  // handleClick function manages logout button clicks and refresh tokens in local storage.\n  var handleLogoutBtnClick = function handleLogoutBtnClick() {\n    logout(user.userId);\n    navigate(\'/login\');\n    if (sidebarOpen) toggleSidebar();\n  };\n\n  // State and function to manage sidebar open/closed behavior.\n  var _useState = (0,react.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    sidebarOpen = _useState2[0],\n    setSidebarOpen = _useState2[1];\n\n  // toggleSidebar function toggles the sidebar open and closed.\n  var toggleSidebar = function toggleSidebar() {\n    setSidebarOpen(!sidebarOpen);\n  };\n\n  // Redirects user to either the homepage or login page when title is clicked\n  var handleTitleClick = function handleTitleClick() {\n    if (user) {\n      // If user is logged in, redirect to the homepage\n      navigate(\'/\');\n      if (sidebarOpen) toggleSidebar();\n    } else {\n      // If user is not logged in, redirect to the login page\n      navigate(\'/login\');\n    }\n  };\n\n  /**\n   * Main header component, which contains:\n   *\n   * hamburger menu icon that toggles the sidebar open and closed,\n   * app h1 title,\n   * username,\n   * logout button that logs users out of their account\n   *\n   * @returns {JSX.Element} The rendered Header component.\n   */\n  return /*#__PURE__*/react.createElement("header", null, /*#__PURE__*/react.createElement("div", {\n    className: "header-container"\n  }, /*#__PURE__*/react.createElement("img", {\n    className: "hamburger",\n    onClick: toggleSidebar,\n    src: hamburger,\n    alt: "Button that opens sidebar navigation panel"\n  }), /*#__PURE__*/react.createElement("h1", {\n    onClick: handleTitleClick\n  }, "quil", /*#__PURE__*/react.createElement("img", {\n    src: feather_header,\n    alt: "large feather icon"\n  })), user && /*#__PURE__*/react.createElement("div", {\n    className: "auth-box"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "user"\n  }, /*#__PURE__*/react.createElement("p", null, " Hey, ", user.username, "!")), /*#__PURE__*/react.createElement("div", {\n    className: "logout"\n  }, /*#__PURE__*/react.createElement("button", {\n    onClick: handleLogoutBtnClick\n  }, "Log Out")))), /*#__PURE__*/react.createElement(components_Sidebar, {\n    isOpen: sidebarOpen,\n    toggleSidebar: toggleSidebar\n  }));\n}\n/* harmony default export */ const components_Header = (Header);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///161\n')}}]);